.Dd June 01, 2025
.Dt BMATH 1
.Os
.Sh NAME
.Nm bmath
.Nd prints result of some bitwise expression in a pretty format
.Sh SYNOPSIS
.Nm
.Op Fl b
.Op Fl d Ar <EXPRESSION>
.Op Fl u
.Op Fl -unicode
.Nm
.Op Fl -help
.Nm
.Op Fl -usage
.Nm
.Op Fl V
.Sh DESCRIPTION
.Pp
Prints the result of some bitwise \fIEXPRESSION\fR. These are parsed through \fB--detached\fR, \fBstdin\fR, or \fBinteractive\fR modes. The default mode is \fBinteractive\fR.
.Pp
Interactive mode can be exited by typing \fIexit\fR or \fIquit\fR.
.Sh OPTIONS
.Bl -tag -width Ds
.It Fl b
Appends binary representation of result to output.
.It Fl d\ \fI<EXPRESSION>\fR, Fl -detached=\fI<EXPRESSION>\fR
\fBstdin\fR is overriden given this option.
.It Fl -help
Prints help information.
.It Fl u, Fl -uppercase
Prints hexadecimal output in uppercase.
.It Fl -unicode
Appends unicode representation of result to output in UTF-8, 16, and 32 forms.
.It Fl -usage
Prints usage message.
.It Fl V, Fl -version
Prints program version.
.El
.Sh EXPRESSION
.Bd -literal
expr = signed, op, signed
     | signed ;
signed = number
       | paren, expr, rparen
       | { logic_not | sign }, signed
number = digit, { digit }
       | hex ;
digit = [0-9], { [0-9] } ;
hex = "0x", [0-9a-fA-F], { [0-9a-fA-F] } ;
op = "|" | "^" | "&" | "<<" | ">>" | "-" | "+" ;
lparen = "(" ;
rparen = ")" ;
logic_not = "~" ;
sign = "-" | "+" ;

Order of operations:
+------------+
| 1 | +, -   |
+---+--------+
| 2 | <<, >> |
+---+--------+
| 3 | &      |
+---+--------+
| 4 | ^      |
+---+--------+
| 5 | |      |
+---+--------+
.Ed
.Sh EXAMPLES
.Bd -literal
$ echo "1 << 17" | bmath
1 << 17
  Dec: 131072
 Char: Exceeded
  Hex: 0x20000
Hex16: Exceeded
Hex32: 0x00020000
Hex64: 0x0000000000020000

$ bmath --unicode -b -d "0xff"
   u64: 255
    i8: -1
 UTF-8: ÿ (0xc3bf)
UTF-16: ÿ (0x00ff)
UTF-32: ÿ (0x000000ff)
   Hex: 0xff
 Hex16: 0x00ff
 Hex32: 0x000000ff
 Hex64: 0x00000000000000ff
00000000 00000000 00000000 00000000
00000000 00000000 00000000 11111111

$ bmath
expr> 0xff
   u64: 255
    i8: -1
  char: Exceeded
   Hex: 0xff
 Hex16: 0x00ff
 Hex32: 0x000000ff
 Hex64: 0x00000000000000ff
expr> 0x0f
   u64: 15
    i8: 15
  char: <special>
   Hex: 0xf
 Hex16: 0x000f
 Hex32: 0x0000000f
 Hex64: 0x000000000000000f
expr> exit
.Ed
.Sh AUTHOR
Written by Frederick Lawler <me@fred.software>
.Sh REPORTING BUGS
Report any bugs to <https://github.com/fredlawl/bmath>
